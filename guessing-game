# template for "Guess the number" mini-project
# input will come from buttons and an input field
# all output for the game will be printed in the console
import simplegui, random

num_range = 100
secret_number = random.randrange(0, int(num_range))
remaining_guesses = 7

# helper function to start and restart the game
def new_game():
    # initialize global variables used in your code here
    global secret_number, num_range, remaining_guesses
    print "New game. Range is [0," + str(num_range) + ")"
    if num_range == 100:
        remaining_guesses = 7
    else:
        remaining_guesses = 10
    print "Number of remaining guesses is ", int(remaining_guesses)
    print 
    return secret_number
    
# define event handlers for control panel
def range100():
    # button that changes the range to [0,100) and starts a new game
    global num_range
    num_range = 100
    new_game()

def range1000():
    # button that changes the range to [0,1000) and starts a new game
    global num_range
    num_range = 1000
    new_game()
    
def input_guess(guess):
    # main game logic goes here
    global remaining_guesses, secret_number
    guess = int(guess)
    print "Guess was", guess
    
    remaining_guesses -= 1
    print "Number of remaining guesses is ", int(remaining_guesses)
    
    if guess == secret_number:
        print "Correct!"
        print
        return new_game()
    elif remaining_guesses == 0:
        print "You ran out of guesses. The number was", secret_number
        print 
        return new_game()   
    elif guess < secret_number:
        print "Higher!"
    else:
        print "Lower!"
    print

# create frame
frame = simplegui.create_frame("Guess the Number", 200, 200)

# register event handlers for control elements and start frame
frame.add_button("Range is [0, 100)", range100)
frame.add_button("Range is [0, 1000)", range1000)
frame.add_button("Restart", new_game)
frame.add_input('Enter a guess', input_guess, 200)
frame.start()

# call new_game 
new_game()


# always remember to check your completed program against the grading rubric
